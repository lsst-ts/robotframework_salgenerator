This Dockerfile and accompanying files are designed to create a Docker image to use for testing the SAL API.

It creates an image based on the lsstts/robot:latest image, and installs all SAL dependencies.  

* tk
* tk-devel 
* ncurses-libs 
* xterm
* xorg-x11-fonts-misc
* maven
* java-1.8.0-openjdk-devel
* gnome-terminal
* iproute 
* mariadb
* make
* gcc-c++

The image is also configured with the necessary SAL Environment Variables.

* LSST_SDK_INSTALL=$HOME/repos/ts_sal
* OSPL_HOME=$HOME/repos/ts_opensplice/OpenSpliceDDS/V6.4.1/HDE/x86_64.linux
* LSST_DDS_DOMAIN=citest
* JAVA_HOME=/etc/alternatives/java_sdk_1.8.0_openjdk

The user is saluser and testing should done with that account.

Note that the SAL, XMLs and OpenSplice are not installed by default.  This is so the latest versions of each can be checked out and mounted to the container.  Here is a recommneded docker run statement, assuming the environment is Jenkins, and all the XML files have been copied to the xml_files intermediate directory:

$ home=/home/saluser
$ docker run --name sal_tests -di -u $user \
-v ${WORKSPACE}/robot:$home/Reports \
-v ${WORKSPACE}/SAL:$home/repos/ts_sal \
-v ${WORKSPACE}/xml_files:$home/repos/ts_sal/test \
-v ${WORKSPACE}/OSPL:$home/repos/ts_opensplice \
-v ${WORKSPACE}/rbtsalgen:$home/repos/robotframework_salgenerator \
-v ${WORKSPACE}/rbtsal:$home/repos/robotframework_SAL \
-w $home lsstts/robotsal:latest


